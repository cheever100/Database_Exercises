--Step #2:
--Insert 4 new users into the database. 
--One should have a NULL role. 
--The other three should be authors.

INSERT INTO users (name, email, role_id) VALUES
('george', 'george@example.com', 2),
('tom', 'tom@example.com', 2),
('chris', 'chris@example.com', 2),
('melvin', 'melvin@example.com', null);

--Step #3:
--Use join to combine results 
--from the users and roles tables as we did in the lesson.

SELECT users.name as user_name, roles.name as role_name
FROM users
JOIN roles ON users.role_id = roles.id;

--left join
SELECT users.name as user_name, roles.name as role_name
FROM users
LEFT JOIN roles ON users.role_id = roles.id;

--right join
SELECT users.name as user_name, roles.name as role_name
FROM users
RIGHT JOIN roles ON users.role_id = roles.id;

CLASS EXAMPLE
join
SELECT users.name AS user_name, roles.name as role_name
FROM users
JOIN roles ON users.role_id = roles.id;

left join
SELECT users.name AS user_name, roles.name AS role_name
FROM users
LEFT JOIN roles ON users.role_id = roles.id;

right join
SELECT users.name AS user_name, roles.name AS role_name
FROM users
RIGHT JOIN roles ON users.role_id = roles.id;


--Step #4:
--Use count and the appropriate join type to get a list
--of roles along with the number of users that has the role. 
SELECT roles.name, users.name 
FROM users
JOIN roles ON users.role_id = roles.id;

--Step #5: switch over to the employees database.
--Step #6:
--write a query that shows each department 
--along with the name of the current manager for that department.

SELECT departments.dept_name, employees.first_name, employees.last_name
FROM departments
JOIN dept_manager ON departments.dept_no = dept_manager.dept_no
JOIN employees ON dept_manager.emp_no = employees.emp_no
WHERE dept_manager.to_date > NOW();



